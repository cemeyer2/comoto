var matches;var submissions;var submissionIdsOnList=[];function loadGraph(a,b){matches=convertMatches(a);submissions=b;submissionIdsOnList=[];updateGraph()}function convertMatches(g){var e=[];var d=g.sameSemesterMatches;for(var c in d){if(d.hasOwnProperty(c)){var b=d[c];b.isSolutionMatch=false;b.isCrossSemesterMatch=false;e.push(b)}}var f=g.crossSemesterMatches;for(var c in f){if(f.hasOwnProperty(c)){var b=f[c];b.isSolutionMatch=false;b.isCrossSemesterMatch=true;e.push(b)}}var a=g.solutionMatches;for(var c in a){if(a.hasOwnProperty(c)){var b=a[c];b.isSolutionMatch=true;b.isCrossSemesterMatch=false;e.push(b)}}return e}function updateGraph(){$("#chart svg").remove();var a=buildGraphData();renderGraph(a);$("#updateGraphButton").attr("disabled",true)}function buildSubmissionData(d,b){var a=0;for(var c in submissions){if(submissions.hasOwnProperty(c)){var g=submissions[c];var e=g.type==="solutionsubmission"?-1:g.offering_id;var f={group:e,index:a,hasSolutionMatch:false,hasCrossSemesterMatch:false,id:g.id,offering_id:g.offering_id,analysis_pseudonym_ids:g.analysis_pseudonym_ids,submission_file_ids:g.submission_file_ids,partner_ids:g.partner_ids,type:g.type,student:g.student,edges:[]};d[f.id]=a;b.push(f);a+=1}}}function buildMatchData(b,l,j){var k=0;for(var m in matches){if(matches.hasOwnProperty(m)){var g=matches[m];var c=b[g.submission_1_id];var i=b[g.submission_2_id];var h=l[c];var f=l[i];if(g.isCrossSemesterMatch){h.hasCrossSemesterMatch=true;f.hasCrossSemesterMatch=true}if(g.isSolutionMatch){h.hasSolutionMatch=true;f.hasSolutionMatch=true}h.edges.push(k);f.edges.push(k);var a=$.inArray(f.id,h.partner_ids)>=0;var d=$.inArray(h.id,f.partner_ids)>=0;var e=a||d;j.push({source:c,target:i,value:(g.score1+g.score1)/2,isPartnerMatch:e,isSolutionMatch:g.isSolutionMatch,isCrossSemesterMatch:g.isCrossSemesterMatch,id:g.id,link:g.link,moss_analysis_id:g.moss_analysis_id,score1:g.score1,score2:g.score2});k++}}}function buildSubmissionDataToInclude(h,c,j,f){var g=0;for(var a in h){if(h.hasOwnProperty(a)&&submissionSatisfiesPredicates(h[a],f)){var b=h[a];b.crossSemesterMatches=[];for(var d in b.edges){if(b.edges.hasOwnProperty(d)){var e=f[b.edges[d]];if(e.isCrossSemesterMatch){b.crossSemesterMatches.push(e)}}}b.edges=[];c[b.id]=g;j.push(b);g++}}}function buildMatchDataToInclude(g,b,j,l,i){var h=0;for(var k in g){if(g.hasOwnProperty(k)&&matchSatisfiesPredicates(g[k])){var f=g[k];var a=b[j[f.source].id];var e=b[j[f.target].id];var d=l[a];var c=l[e];d.edges.push(h);c.edges.push(h);f.source=a;f.target=e;i.push(f);h++}}}function buildGraphData(){var f=[];var b=[];var c={};buildSubmissionData(c,b);buildMatchData(c,b,f);var e=[];var a=[];var d={};buildSubmissionDataToInclude(b,d,a,f);buildMatchDataToInclude(f,d,b,a,e);return{nodes:a,links:e}}function submissionSatisfiesPredicates(a,e){var b=a.type==="solutionsubmission";var h=graphControls.includePastSemesters||a.offering_id===currentOfferingId;var g=null;if(e){var c=0;for(var d in a.edges){if(a.edges.hasOwnProperty(d)){var f=e[a.edges[d]];var j=graphControls.minimumEdgeWeight<=(f.score1+f.score1)/2;if(j){c++}}}g=graphControls.includeSingletons||c}else{g=graphControls.includeSingletons||a.edges.length>0}if(b){return graphControls.includeSolution}else{return h&&g}}function matchSatisfiesPredicates(a){var b=(a.score1+a.score1)/2;var e=graphControls.minimumEdgeWeight<=b;var d=graphControls.includeSolution||!a.isSolutionMatch;var f=graphControls.includePartnerEdges||!a.isPartnerMatch;var c=graphControls.includePastSemesters||!a.isCrossSemesterMatch;return e&&d&&f&&c};